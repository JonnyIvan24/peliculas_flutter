// Paste Json as code comando en vscode para parsear un json a modelo
// Generated by https://quicktype.io

class Peliculas {

  List<Pelicula> items = new List();

  Peliculas();

  Peliculas.fromJsonList( List<dynamic> jsonList ) {

    //validamos que el jsonList contenga algo si no retornamos null
    if (jsonList == null) return;

    for ( var item in jsonList ){
      // asignamos cada item del json a una nueva instancia de Pelicula
      final pelicula = Pelicula.fromJsonMap(item);
      // despues agregamos cada instancia de pelicula a la lista o los items de Peliculas
      items.add(pelicula);
    }

  }

}

class Pelicula {
  int voteCount;
  int id;
  bool video;
  double voteAverage;
  String title;
  double popularity;
  String posterPath;
  String originalLanguage;
  String originalTitle;
  List<int> genreIds;
  String backdropPath;
  bool adult;
  String overview;
  String releaseDate;

  Pelicula({
    this.voteCount,
    this.id,
    this.video,
    this.voteAverage,
    this.title,
    this.popularity,
    this.posterPath,
    this.originalLanguage,
    this.originalTitle,
    this.genreIds,
    this.backdropPath,
    this.adult,
    this.overview,
    this.releaseDate,
  });

  Pelicula.fromJsonMap( Map<String, dynamic> json ) {

    voteCount         = json['vote_count'];
    id                = json['id'];
    video             = json['video'];
    voteAverage       = json['vote_average'] / 1;     // parseamos a un double en caso que a respuesta sea con terminaci√≥n .0
    title             = json['title'];
    popularity        = json['popularity'] / 1;
    posterPath        = json['poster_path'];
    originalLanguage  = json['original_language'];
    originalTitle     = json['original_title'];
    genreIds          = json['genre_ids'].cast<int>();  // casteamos a int
    backdropPath      = json['backdrop_path'];
    adult             = json['adult'];
    overview          = json['overview'];
    releaseDate       = json['release_date'];

  }

  getPosterImg() {

    if (posterPath == null){ // si no tenemos un dato para la imagen posterPath enviamos una por defecto
      return 'https://regmedxb.com/images/team/no-image-icon.png';
    } else{   // caso contrario mandamos la ruta de la imagen para el poster
      return 'https://image.tmdb.org/t/p/w500/$posterPath';
    }

  }

  getBackgroundImg() {

    if (posterPath == null){ // si no tenemos un dato para la imagen posterPath enviamos una por defecto
      return 'https://regmedxb.com/images/team/no-image-icon.png';
    } else{   // caso contrario mandamos la ruta de la imagen para el poster
      return 'https://image.tmdb.org/t/p/w500/$backdropPath';
    }

  }

}
